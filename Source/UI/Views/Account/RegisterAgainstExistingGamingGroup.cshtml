@model UI.Models.RegisterViewModel
@{
    //TODO This file has so much redundancy with Register.cshtml they really should be combined
    ViewBag.Title = "Register";
    Layout = MVC.Shared.Views._BaseLayout;
}

<h2 class="page-header">@ViewBag.Title</h2>
<hr />

<div class="row">
    <div class="col-md-8">
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h4>Create a new account.</h4>
            </div>
            <div class="panel-body">
                @using (Html.BeginForm("Register", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary()
                    @Html.HiddenFor(model => model.GamingGroupInvitationId)
                    <div class="form-group">
                        @Html.LabelFor(m => m.UserName, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.UserName)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.EmailAddress, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.EmailAddress)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Password, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Password)
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
                        <div class="col-md-10">
                            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ConfirmPassword)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" class="btn btn-primary" value="Register" />
                        </div>
                    </div>
                }
            </div>
        </div>    
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
